(function(){const w=document.createElement("link").relList;if(w&&w.supports&&w.supports("modulepreload"))return;for(const u of document.querySelectorAll('link[rel="modulepreload"]'))p(u);new MutationObserver(u=>{for(const m of u)if(m.type==="childList")for(const B of m.addedNodes)B.tagName==="LINK"&&B.rel==="modulepreload"&&p(B)}).observe(document,{childList:!0,subtree:!0});function O(u){const m={};return u.integrity&&(m.integrity=u.integrity),u.referrerPolicy&&(m.referrerPolicy=u.referrerPolicy),u.crossOrigin==="use-credentials"?m.credentials="include":u.crossOrigin==="anonymous"?m.credentials="omit":m.credentials="same-origin",m}function p(u){if(u.ep)return;u.ep=!0;const m=O(u);fetch(u.href,m)}})();document.addEventListener("DOMContentLoaded",()=>{const R=document.getElementById("map"),w=document.getElementById("itinerary-panel"),O=document.getElementById("panel-handle"),p=document.getElementById("itinerary-list"),u=document.getElementById("date-filters"),m=document.getElementById("category-filters"),B=document.getElementById("manage-itineraries-btn"),H=document.getElementById("itinerary-manager-modal"),q=document.getElementById("create-itinerary-modal"),x=document.getElementById("password-prompt-modal"),j=document.getElementById("edit-location-modal"),U=document.getElementById("itinerary-title"),F=document.getElementById("read-only-indicator"),z=document.getElementById("add-location-container"),_=document.getElementById("export-json"),K=document.getElementById("export-printable"),n={currentItinerary:null,isReadOnly:!0,filter:{date:"all",category:"all"},editingLocationId:null},b={sight:{name:"景點",color:"var(--category-sight)"},stay:{name:"住宿",color:"var(--category-stay)"},transport:{name:"交通",color:"var(--category-transport)"},food:{name:"餐飲",color:"var(--category-food)"},default:{name:"其他",color:"var(--category-default)"}},v=L.map(R).setView([25.105497,121.517594],10);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(v);const M=L.layerGroup().addTo(v),f=(()=>{let i;const c="TravelItinerariesDB",a="itineraries";async function o(){return new Promise((e,s)=>{const t=indexedDB.open(c,1);t.onerror=d=>s("資料庫開啟失敗",d.target.error),t.onsuccess=d=>{i=d.target.result,e(i)},t.onupgradeneeded=d=>{const l=d.target.result;l.objectStoreNames.contains(a)||l.createObjectStore(a,{keyPath:"id"})}})}async function r(e="readonly"){return i||await o(),i.transaction(a,e).objectStore(a)}return{init:o,async saveItinerary(e){const s=await r("readwrite");return new Promise((t,d)=>{const l=s.put(e);l.onsuccess=t,l.onerror=d})},async getItineraries(){const e=await r();return new Promise((s,t)=>{const d=e.getAll();d.onsuccess=()=>s(d.result),d.onerror=t})},async getItineraryById(e){const s=await r();return new Promise((t,d)=>{const l=s.get(e);l.onsuccess=()=>t(l.result),l.onerror=d})},async deleteItinerary(e){const s=await r("readwrite");return new Promise((t,d)=>{const l=s.delete(e);l.onsuccess=t,l.onerror=d})}}})(),J=(()=>{const i=new TextEncoder;async function c(a,o){const r=await crypto.subtle.importKey("raw",i.encode(a),{name:"PBKDF2"},!1,["deriveBits","deriveKey"]);return crypto.subtle.deriveBits({name:"PBKDF2",salt:o,iterations:1e5,hash:"SHA-256"},r,256)}return{async hashPassword(a){const o=crypto.getRandomValues(new Uint8Array(16)),r=await c(a,o);return{hash:Array.from(new Uint8Array(r)).map(t=>t.toString(16).padStart(2,"0")).join(""),salt:o}},async verifyPassword(a,o,r){const e=await c(a,o);return Array.from(new Uint8Array(e)).map(d=>d.toString(16).padStart(2,"0")).join("")===r}}})();function $(){if(!n.currentItinerary){A();return}const i=n.currentItinerary.locations,c=G();U.textContent=n.currentItinerary.name,F.classList.toggle("hidden",!n.isReadOnly),z.classList.toggle("hidden",n.isReadOnly),Z(i),W(i,c),Q(c),V(i)}function A(){U.textContent="尚未載入行程",F.classList.add("hidden"),z.classList.add("hidden"),p.innerHTML='<p class="empty-message">請從「管理」建立或載入一個行程。</p>',u.innerHTML="",m.innerHTML="",M.clearLayers(),V([])}function G(){return n.currentItinerary?n.currentItinerary.locations.filter(i=>(n.filter.date==="all"||i.date===n.filter.date)&&(n.filter.category==="all"||i.category===n.filter.category)):[]}function W(i,c){if(i.length===0){p.innerHTML=n.isReadOnly?'<p class="empty-message">此行程沒有任何地點。</p>':'<p class="empty-message">此行程沒有任何地點，點擊下方按鈕新增第一個景點吧！</p>';return}const a=i.reduce((e,s)=>(e[s.date]||(e[s.date]=[]),e[s.date].push(s),e),{}),o=n.filter.date!=="all"||n.filter.category!=="all",r=Object.keys(a).sort().map(e=>{const t=a[e].map(d=>{const l=c.some(g=>g.id===d.id);if(o&&!l)return"";const S=b[d.category]||b.default,D=c.findIndex(g=>g.id===d.id),N=l?D+1:"•",k=I(d.location);return`
                    <div class="location-item" data-id="${d.id}" draggable="${!n.isReadOnly}">
                        <span class="location-number" style="color: ${S.color};">${N}</span>
                        <p>${k}</p>
                        <span class="category-badge" style="background-color: ${S.color};">${S.name}</span>
                        ${n.isReadOnly?"":`
                        <div class="location-controls">
                            <button class="edit-btn" title="編輯">✏️</button>
                            <button class="delete-btn" title="刪除">🗑️</button>
                        </div>`}
                    </div>`}).join("");return t?`<div class="day-group"><div class="day-header">${e}</div>${t}</div>`:""}).join("");p.innerHTML=r||'<p class="empty-message">沒有符合篩選條件的景點。</p>'}function Z(i){const a=[...new Set(i.map(e=>e.date))].sort().map(e=>`<button data-date="${e}" class="${n.filter.date===e?"active":""}">${e}</button>`).join("");u.innerHTML=`<button data-date="all" class="${n.filter.date==="all"?"active":""}">全部日期</button>${a}`;const r=[...new Set(i.map(e=>e.category))].map(e=>{const s=b[e]||b.default;return`<button data-category="${e}" class="${n.filter.category===e?"active":""}">${s.name}</button>`}).join("");m.innerHTML=`<button data-category="all" class="${n.filter.category==="all"?"active":""}">全部分類</button>${r}`}function Q(i){if(M.clearLayers(),i.length===0)return;const c=L.latLngBounds();i.forEach((a,o)=>{const r=b[a.category]||b.default,e=L.divIcon({html:`<div style="background-color: ${r.color}; width: 28px; height: 28px; border-radius: 50%; border: 2px solid white; box-shadow: var(--shadow); display: flex; justify-content: center; align-items: center; color: white; font-size: 14px; font-weight: bold;">${o+1}</div>`,className:"custom-marker-icon",iconSize:[28,28],iconAnchor:[14,14]}),s=L.marker(a.coordinates,{icon:e}),t=`<b>${I(a.location)}</b><br>${I(a.description||"無描述")}`;s.bindPopup(t),s.addTo(M),c.extend(a.coordinates)});for(let a=0;a<i.length-1;a++)i[a].date===i[a+1].date&&L.polyline([i[a].coordinates,i[a+1].coordinates],{color:"#3388ff",weight:3,opacity:.7}).addTo(M);c.isValid()&&v.fitBounds(c.pad(.2),{maxZoom:15})}function V(i){document.getElementById("stats-days").innerText=new Set(i.map(a=>a.date)).size,document.getElementById("stats-locations").innerText=i.length;let c=0;i.forEach((a,o)=>{o>0&&a.date===i[o-1].date&&(c+=v.distance(a.coordinates,i[o-1].coordinates))}),document.getElementById("stats-distance").innerText=(c/1e3).toFixed(1)}function h(i,c){i.classList.toggle("hidden",!c)}async function T(){const i=await f.getItineraries(),c=document.getElementById("itinerary-manager-list");i.length===0?c.innerHTML="<li>尚未建立任何行程。</li>":c.innerHTML=i.map(a=>`
                <li class="itinerary-manager-item" data-id="${a.id}">
                    <span class="itinerary-manager-item-name">${I(a.name)}</span>
                    <div class="itinerary-manager-item-actions">
                        <button class="load-btn">載入</button>
                        <button class="delete-btn">刪除</button>
                    </div>
                </li>
            `).join(""),h(H,!0)}function C(i,c){n.currentItinerary=i,n.isReadOnly=c,n.filter={date:"all",category:"all"},$(),h(H,!1),h(x,!1)}async function X(){const i=document.getElementById("location-name").value,c=document.getElementById("location-date").value,a=document.getElementById("location-category").value,o=document.getElementById("location-description").value,r=document.getElementById("location-coordinates").value;if(!i||!c||!r){y("地點名稱、日期和座標為必填項","error");return}const e=r.split(",").map(Number);if(e.length!==2||isNaN(e[0])||isNaN(e[1])){y("座標格式不正確","error");return}const s={date:c,location:i,category:a,description:o,coordinates:e,image:""};if(n.editingLocationId){const t=n.currentItinerary.locations.findIndex(d=>d.id===n.editingLocationId);t>-1&&(n.currentItinerary.locations[t]={...n.currentItinerary.locations[t],...s})}else s.id=`loc_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,n.currentItinerary.locations.push(s);n.currentItinerary.locations.sort((t,d)=>new Date(t.date)-new Date(d.date)),await f.saveItinerary(n.currentItinerary),y("景點已儲存！","success"),h(j,!1),$()}const Y=et(async()=>{const i=document.getElementById("location-name").value;if(!i)return;const c=document.getElementById("location-search-results");c.innerHTML="搜尋中...";try{const a=await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(i)}&limit=5`,{headers:{"User-Agent":"TravelItineraryHelper/2.1"}});if(!a.ok)throw new Error("API 請求失敗");const o=await a.json();o.length===0?c.innerHTML="找不到結果":c.innerHTML=o.map(r=>`<div class="search-result-item" data-lat="${r.lat}" data-lon="${r.lon}">${I(r.display_name)}</div>`).join("")}catch(a){c.innerHTML="搜尋時發生錯誤",y(a.message,"error")}},500);function tt(){document.querySelectorAll(".close-modal-btn").forEach(o=>{o.addEventListener("click",()=>h(o.closest(".modal-backdrop"),!1))}),B.addEventListener("click",T),H.addEventListener("click",async o=>{const r=o.target,e=r.closest(".itinerary-manager-item");if(!e)return;const s=e.dataset.id;if(r.classList.contains("load-btn")){const t=await f.getItineraryById(s);t.hash?(h(x,!0),x.dataset.id=s):C(t,!1)}else if(r.classList.contains("delete-btn")){const t=e.querySelector(".itinerary-manager-item-name").textContent;confirm(`確定要刪除行程 "${t}" 嗎？此操作無法復原。`)&&(await f.deleteItinerary(s),n.currentItinerary&&n.currentItinerary.id===s&&(n.currentItinerary=null,A()),y("行程已刪除","success"),T())}}),document.getElementById("create-new-itinerary-btn").addEventListener("click",()=>{h(q,!0)});const i=document.getElementById("import-itinerary-btn"),c=document.getElementById("import-file-input");i&&c?(i.addEventListener("click",()=>{c.click()}),c.addEventListener("change",o=>{const r=o.target.files[0];if(!r)return;const e=new FileReader;e.onload=async s=>{try{const t=JSON.parse(s.target.result);if(!t.id||!t.name||!t.locations)throw new Error("無效的檔案格式");t.salt&&Array.isArray(t.salt)&&(t.salt=new Uint8Array(t.salt)),await f.saveItinerary(t),y(`行程 "${t.name}" 已成功匯入！`,"success"),T()}catch(t){y(`匯入失敗: ${t.message}`,"error"),console.error("File import failed:",t)}},e.readAsText(r),o.target.value=""})):console.error("Error: Import button or file input not found!"),document.getElementById("save-new-itinerary-btn").addEventListener("click",async()=>{const o=document.getElementById("new-itinerary-name").value,r=document.getElementById("new-itinerary-password").value;if(!o){y("請輸入行程名稱","error");return}const e={id:`it_${Date.now()}`,name:o,createdAt:new Date().toISOString(),locations:[],hash:null,salt:null};if(r){const{hash:s,salt:t}=await J.hashPassword(r);e.hash=s,e.salt=t}await f.saveItinerary(e),y("行程已建立！","success"),h(q,!1),T()}),document.getElementById("submit-password-btn").addEventListener("click",async()=>{const o=x.dataset.id,r=document.getElementById("itinerary-password-input").value,e=await f.getItineraryById(o);await J.verifyPassword(r,e.salt,e.hash)?C(e,!1):y("密碼錯誤！","error"),document.getElementById("itinerary-password-input").value=""}),document.getElementById("load-readonly-btn").addEventListener("click",async()=>{const o=x.dataset.id,r=await f.getItineraryById(o);C(r,!0)}),document.getElementById("add-location-btn").addEventListener("click",()=>{n.editingLocationId=null,document.getElementById("edit-location-title").textContent="新增景點";let o=new Date().toISOString().split("T")[0];n.currentItinerary&&n.currentItinerary.locations.length>0&&(o=n.currentItinerary.locations[n.currentItinerary.locations.length-1].date),document.getElementById("location-name").value="",document.getElementById("location-date").value=o,document.getElementById("location-category").value="sight",document.getElementById("location-description").value="",document.getElementById("location-coordinates").value="",document.getElementById("location-search-results").innerHTML="",h(j,!0)}),document.getElementById("save-location-btn").addEventListener("click",X),document.getElementById("search-location-btn").addEventListener("click",Y),document.getElementById("location-search-results").addEventListener("click",o=>{const r=o.target.closest(".search-result-item");r&&(document.getElementById("location-name").value=r.textContent,document.getElementById("location-coordinates").value=`${r.dataset.lat}, ${r.dataset.lon}`,document.getElementById("location-search-results").innerHTML="")}),p.addEventListener("click",o=>{const r=o.target,e=r.closest(".location-item");if(!e)return;const s=e.dataset.id;if(r.closest(".edit-btn")){n.editingLocationId=s;const t=n.currentItinerary.locations.find(d=>d.id===s);document.getElementById("edit-location-title").textContent="編輯景點",document.getElementById("location-name").value=t.location,document.getElementById("location-date").value=t.date,document.getElementById("location-category").value=t.category,document.getElementById("location-description").value=t.description,document.getElementById("location-coordinates").value=t.coordinates.join(", "),h(j,!0)}else if(r.closest(".delete-btn")){const t=e.querySelector("p").textContent;confirm(`確定要刪除景點 "${t}" 嗎？`)&&(n.currentItinerary.locations=n.currentItinerary.locations.filter(d=>d.id!==s),f.saveItinerary(n.currentItinerary),$())}else{const t=n.currentItinerary.locations.find(d=>d.id===s);t&&v.flyTo(t.coordinates,15)}});let a=null;p.addEventListener("dragstart",o=>{if(n.isReadOnly)return;const r=o.target.closest(".location-item");r&&(a=r.dataset.id,setTimeout(()=>r.classList.add("dragging"),0))}),p.addEventListener("dragover",o=>{n.isReadOnly||!a||o.preventDefault()}),p.addEventListener("drop",o=>{if(n.isReadOnly||!a)return;o.preventDefault();const r=o.target.closest(".location-item"),e=n.currentItinerary.locations.findIndex(t=>t.id===a);let s=n.currentItinerary.locations.findIndex(t=>t.id===r?.dataset.id);if(e!==-1&&s!==-1&&e!==s){const[t]=n.currentItinerary.locations.splice(e,1);n.currentItinerary.locations.splice(s,0,t);const d=n.currentItinerary.locations[s].date;t.date=d,f.saveItinerary(n.currentItinerary),$()}a=null,document.querySelector(".dragging")?.classList.remove("dragging")}),p.addEventListener("dragend",()=>{a=null,document.querySelector(".dragging")?.classList.remove("dragging")}),document.getElementById("filters").addEventListener("click",o=>{if(o.target.tagName!=="BUTTON")return;const r=o.target;r.dataset.date!==void 0&&(n.filter.date=r.dataset.date),r.dataset.category!==void 0&&(n.filter.category=r.dataset.category),$()}),O.addEventListener("click",()=>{w.classList.toggle("open"),O.classList.toggle("open"),setTimeout(()=>v.invalidateSize(!0),300)}),_.addEventListener("click",()=>{if(!n.currentItinerary){y("尚未載入任何行程","warning");return}const o=JSON.parse(JSON.stringify(n.currentItinerary));n.currentItinerary.salt instanceof Uint8Array&&(o.salt=Array.from(n.currentItinerary.salt));const r=JSON.stringify(o,null,4),e=new Blob([r],{type:"application/json"}),s=URL.createObjectURL(e),t=document.createElement("a");t.href=s,t.download=`${n.currentItinerary.name}.json`,document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(s),y("行程資料已匯出為 JSON 檔！","success")}),K.addEventListener("click",()=>{if(!n.currentItinerary||n.currentItinerary.locations.length===0){y("沒有可列印的行程資料","warning");return}y("正在準備預覽頁面...","normal");const r=n.currentItinerary.locations.reduce((g,E)=>(g[E.date]||(g[E.date]=[]),g[E.date].push(E),g),{}),e=document.getElementById("stats-days").innerText,s=document.getElementById("stats-locations").innerText,t=document.getElementById("stats-distance").innerText,d=`總天數: ${e} 天 | 總地點: ${s} 個 | 總距離: ${t} km`;let l=`
                <table border="1" style="width: 100%; border-collapse: collapse; font-size: 12px; border-color: #ccc;">
                    <thead>
                        <tr style="background-color: #f2f2f2;">
                            <th style="padding: 8px; width: 40px;">#</th>
                            <th style="padding: 8px;">地點</th>
                            <th style="padding: 8px; width: 80px;">分類</th>
                            <th style="padding: 8px;">描述</th>
                        </tr>
                    </thead>
                    <tbody>`,S=1;const D=Object.keys(r).sort();for(const g of D){const E=new Date(g).toLocaleDateString("zh-TW",{weekday:"long"});l+=`
                    <tr style="background-color: #e9ecef; font-weight: bold;">
                        <td colspan="4" style="padding: 10px; border-left: none; border-right: none;">${g} (${E})</td>
                    </tr>
                `;const rt=r[g];for(const P of rt)l+=`
                        <tr>
                            <td style="padding: 8px; text-align: center;">${S++}</td>
                            <td style="padding: 8px;">${I(P.location)}</td>
                            <td style="padding: 8px;">${I(b[P.category]?.name||"其他")}</td>
                            <td style="padding: 8px;">${I(P.description)}</td>
                        </tr>
                    `}l+="</tbody></table>";const N=`
                <html>
                <head>
                    <title>${I(n.currentItinerary.name)} - 可列印版</title>
                    <meta charset="UTF-8">
                    <style>
                        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; margin: 20px; }
                        h1 { color: #2c3e50; }
                        p { color: #333; }
                        table { border: 1px solid #ccc; }
                        th, td { border: 1px solid #ccc; }
                        @media print {
                            @page { margin: 20mm; }
                            body { margin: 0; -webkit-print-color-adjust: exact; print-color-adjust: exact; }
                            h1, p { margin-bottom: 15px; }
                            table { page-break-inside: auto; }
                            tr { page-break-inside: avoid; page-break-after: auto; }
                        }
                    </style>
                </head>
                <body>
                    <h1>${I(n.currentItinerary.name)}</h1>
                    <p>${I(d)}</p>
                    ${l}
                </body>
                </html>`,k=window.open();k.document.write(N),k.document.close(),setTimeout(()=>k.print(),500)})}function y(i,c="normal"){const a=document.createElement("div");a.className=`toast-message ${c}`,a.textContent=i,document.body.appendChild(a),setTimeout(()=>a.classList.add("show"),10),setTimeout(()=>{a.classList.remove("show"),a.addEventListener("transitionend",()=>a.remove())},3e3)}function I(i){return i?i.toString().replace(/[&<>"']/g,function(c){return{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"}[c]}):""}function et(i,c){let a;return function(...o){const r=this;clearTimeout(a),a=setTimeout(()=>i.apply(r,o),c)}}async function nt(){await f.init(),tt(),A(),T()}nt()});
