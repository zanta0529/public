(function(){const w=document.createElement("link").relList;if(w&&w.supports&&w.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))g(l);new MutationObserver(l=>{for(const m of l)if(m.type==="childList")for(const B of m.addedNodes)B.tagName==="LINK"&&B.rel==="modulepreload"&&g(B)}).observe(document,{childList:!0,subtree:!0});function M(l){const m={};return l.integrity&&(m.integrity=l.integrity),l.referrerPolicy&&(m.referrerPolicy=l.referrerPolicy),l.crossOrigin==="use-credentials"?m.credentials="include":l.crossOrigin==="anonymous"?m.credentials="omit":m.credentials="same-origin",m}function g(l){if(l.ep)return;l.ep=!0;const m=M(l);fetch(l.href,m)}})();document.addEventListener("DOMContentLoaded",()=>{const A=document.getElementById("map"),w=document.getElementById("itinerary-panel"),M=document.getElementById("panel-handle"),g=document.getElementById("itinerary-list"),l=document.getElementById("date-filters"),m=document.getElementById("category-filters"),B=document.getElementById("manage-itineraries-btn"),j=document.getElementById("itinerary-manager-modal"),R=document.getElementById("create-itinerary-modal"),x=document.getElementById("password-prompt-modal"),C=document.getElementById("edit-location-modal"),q=document.getElementById("itinerary-title"),U=document.getElementById("read-only-indicator"),F=document.getElementById("add-location-container"),V=document.getElementById("export-json"),_=document.getElementById("export-printable"),r={currentItinerary:null,isReadOnly:!0,filter:{date:"all",category:"all"},editingLocationId:null},v={sight:{name:"景點",color:"var(--category-sight)"},stay:{name:"住宿",color:"var(--category-stay)"},transport:{name:"交通",color:"var(--category-transport)"},food:{name:"餐飲",color:"var(--category-food)"},default:{name:"其他",color:"var(--category-default)"}},E=L.map(A).setView([25.105497,121.517594],10);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(E);const H=L.layerGroup().addTo(E),p=(()=>{let a;const n="TravelItinerariesDB",t="itineraries";async function o(){return new Promise((e,s)=>{const c=indexedDB.open(n,1);c.onerror=d=>s("資料庫開啟失敗",d.target.error),c.onsuccess=d=>{a=d.target.result,e(a)},c.onupgradeneeded=d=>{const u=d.target.result;u.objectStoreNames.contains(t)||u.createObjectStore(t,{keyPath:"id"})}})}async function i(e="readonly"){return a||await o(),a.transaction(t,e).objectStore(t)}return{init:o,async saveItinerary(e){const s=await i("readwrite");return new Promise((c,d)=>{const u=s.put(e);u.onsuccess=c,u.onerror=d})},async getItineraries(){const e=await i();return new Promise((s,c)=>{const d=e.getAll();d.onsuccess=()=>s(d.result),d.onerror=c})},async getItineraryById(e){const s=await i();return new Promise((c,d)=>{const u=s.get(e);u.onsuccess=()=>c(u.result),u.onerror=d})},async deleteItinerary(e){const s=await i("readwrite");return new Promise((c,d)=>{const u=s.delete(e);u.onsuccess=c,u.onerror=d})}}})(),z=(()=>{const a=new TextEncoder;async function n(t,o){const i=await crypto.subtle.importKey("raw",a.encode(t),{name:"PBKDF2"},!1,["deriveBits","deriveKey"]);return crypto.subtle.deriveBits({name:"PBKDF2",salt:o,iterations:1e5,hash:"SHA-256"},i,256)}return{async hashPassword(t){const o=crypto.getRandomValues(new Uint8Array(16)),i=await n(t,o);return{hash:Array.from(new Uint8Array(i)).map(c=>c.toString(16).padStart(2,"0")).join(""),salt:o}},async verifyPassword(t,o,i){const e=await n(t,o);return Array.from(new Uint8Array(e)).map(d=>d.toString(16).padStart(2,"0")).join("")===i}}})();function $(){if(!r.currentItinerary){D();return}const a=r.currentItinerary.locations,n=K();q.textContent=r.currentItinerary.name,U.classList.toggle("hidden",!r.isReadOnly),F.classList.toggle("hidden",r.isReadOnly),W(a),G(a,n),Z(n),J(a)}function D(){q.textContent="尚未載入行程",U.classList.add("hidden"),F.classList.add("hidden"),g.innerHTML='<p class="empty-message">請從「管理」建立或載入一個行程。</p>',l.innerHTML="",m.innerHTML="",H.clearLayers(),J([])}function K(){return r.currentItinerary?r.currentItinerary.locations.filter(a=>(r.filter.date==="all"||a.date===r.filter.date)&&(r.filter.category==="all"||a.category===r.filter.category)):[]}function G(a,n){if(a.length===0){g.innerHTML=r.isReadOnly?'<p class="empty-message">此行程沒有任何地點。</p>':'<p class="empty-message">此行程沒有任何地點，點擊下方按鈕新增第一個景點吧！</p>';return}const t=a.reduce((e,s)=>(e[s.date]||(e[s.date]=[]),e[s.date].push(s),e),{}),o=r.filter.date!=="all"||r.filter.category!=="all",i=Object.keys(t).sort().map(e=>{const c=t[e].map(d=>{const u=n.some(O=>O.id===d.id);if(o&&!u)return"";const S=v[d.category]||v.default,k=n.findIndex(O=>O.id===d.id),h=u?k+1:"•",b=f(d.location);return`
                    <div class="location-item" data-id="${d.id}" draggable="${!r.isReadOnly}">
                        <span class="location-number" style="color: ${S.color};">${h}</span>
                        <p>${b}</p>
                        <span class="category-badge" style="background-color: ${S.color};">${S.name}</span>
                        ${r.isReadOnly?"":`
                        <div class="location-controls">
                            <button class="edit-btn" title="編輯">✏️</button>
                            <button class="delete-btn" title="刪除">🗑️</button>
                        </div>`}
                    </div>`}).join("");return c?`<div class="day-group"><div class="day-header">${e}</div>${c}</div>`:""}).join("");g.innerHTML=i||'<p class="empty-message">沒有符合篩選條件的景點。</p>'}function W(a){const t=[...new Set(a.map(e=>e.date))].sort().map(e=>`<button data-date="${e}" class="${r.filter.date===e?"active":""}">${e}</button>`).join("");l.innerHTML=`<button data-date="all" class="${r.filter.date==="all"?"active":""}">全部日期</button>${t}`;const i=[...new Set(a.map(e=>e.category))].map(e=>{const s=v[e]||v.default;return`<button data-category="${e}" class="${r.filter.category===e?"active":""}">${s.name}</button>`}).join("");m.innerHTML=`<button data-category="all" class="${r.filter.category==="all"?"active":""}">全部分類</button>${i}`}function Z(a){if(H.clearLayers(),a.length===0)return;const n=L.latLngBounds();a.forEach((t,o)=>{const i=v[t.category]||v.default,e=L.divIcon({html:`<div style="background-color: ${i.color}; width: 28px; height: 28px; border-radius: 50%; border: 2px solid white; box-shadow: var(--shadow); display: flex; justify-content: center; align-items: center; color: white; font-size: 14px; font-weight: bold;">${o+1}</div>`,className:"custom-marker-icon",iconSize:[28,28],iconAnchor:[14,14]}),s=L.marker(t.coordinates,{icon:e}),c=`<b>${f(t.location)}</b><br>${f(t.description||"無描述")}`;s.bindPopup(c),s.addTo(H),n.extend(t.coordinates)});for(let t=0;t<a.length-1;t++)a[t].date===a[t+1].date&&L.polyline([a[t].coordinates,a[t+1].coordinates],{color:"#3388ff",weight:3,opacity:.7}).addTo(H);n.isValid()&&E.fitBounds(n.pad(.2),{maxZoom:15})}function J(a){document.getElementById("stats-days").innerText=new Set(a.map(t=>t.date)).size,document.getElementById("stats-locations").innerText=a.length;let n=0;a.forEach((t,o)=>{o>0&&t.date===a[o-1].date&&(n+=E.distance(t.coordinates,a[o-1].coordinates))}),document.getElementById("stats-distance").innerText=(n/1e3).toFixed(1)}function I(a,n){a.classList.toggle("hidden",!n)}async function T(){const a=await p.getItineraries(),n=document.getElementById("itinerary-manager-list");a.length===0?n.innerHTML="<li>尚未建立任何行程。</li>":n.innerHTML=a.map(t=>`
                <li class="itinerary-manager-item" data-id="${t.id}">
                    <span class="itinerary-manager-item-name">${f(t.name)}</span>
                    <div class="itinerary-manager-item-actions">
                        <button class="load-btn">載入</button>
                        <button class="delete-btn">刪除</button>
                    </div>
                </li>
            `).join(""),I(j,!0)}function N(a,n){r.currentItinerary=a,r.isReadOnly=n,r.filter={date:"all",category:"all"},$(),I(j,!1),I(x,!1)}async function Q(){const a=document.getElementById("location-name").value,n=document.getElementById("location-date").value,t=document.getElementById("location-category").value,o=document.getElementById("location-description").value,i=document.getElementById("location-coordinates").value;if(!a||!n||!i){y("地點名稱、日期和座標為必填項","error");return}const e=i.split(",").map(Number);if(e.length!==2||isNaN(e[0])||isNaN(e[1])){y("座標格式不正確","error");return}const s={date:n,location:a,category:t,description:o,coordinates:e,image:""};if(r.editingLocationId){const c=r.currentItinerary.locations.findIndex(d=>d.id===r.editingLocationId);c>-1&&(r.currentItinerary.locations[c]={...r.currentItinerary.locations[c],...s})}else s.id=`loc_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,r.currentItinerary.locations.push(s);r.currentItinerary.locations.sort((c,d)=>new Date(c.date)-new Date(d.date)),await p.saveItinerary(r.currentItinerary),y("景點已儲存！","success"),I(C,!1),$()}const X=tt(async()=>{const a=document.getElementById("location-name").value;if(!a)return;const n=document.getElementById("location-search-results");n.innerHTML="搜尋中...";try{const t=await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(a)}&limit=5`,{headers:{"User-Agent":"TravelItineraryHelper/2.1"}});if(!t.ok)throw new Error("API 請求失敗");const o=await t.json();o.length===0?n.innerHTML="找不到結果":n.innerHTML=o.map(i=>`<div class="search-result-item" data-lat="${i.lat}" data-lon="${i.lon}">${f(i.display_name)}</div>`).join("")}catch(t){n.innerHTML="搜尋時發生錯誤",y(t.message,"error")}},500);function Y(){document.querySelectorAll(".close-modal-btn").forEach(n=>{n.addEventListener("click",()=>I(n.closest(".modal-backdrop"),!1))}),B.addEventListener("click",T),j.addEventListener("click",async n=>{const t=n.target,o=t.closest(".itinerary-manager-item");if(!o)return;const i=o.dataset.id;if(t.classList.contains("load-btn")){const e=await p.getItineraryById(i);e.hash?(I(x,!0),x.dataset.id=i):N(e,!1)}else if(t.classList.contains("delete-btn")){const e=o.querySelector(".itinerary-manager-item-name").textContent;confirm(`確定要刪除行程 "${e}" 嗎？此操作無法復原。`)&&(await p.deleteItinerary(i),r.currentItinerary&&r.currentItinerary.id===i&&(r.currentItinerary=null,D()),y("行程已刪除","success"),T())}}),document.getElementById("create-new-itinerary-btn").addEventListener("click",()=>{I(R,!0)}),document.getElementById("import-itinerary-btn").addEventListener("click",()=>{document.getElementById("import-file-input").click()}),document.getElementById("import-file-input").addEventListener("change",n=>{const t=n.target.files[0];if(!t)return;const o=new FileReader;o.onload=async i=>{try{const e=JSON.parse(i.target.result);if(!e.id||!e.name||!e.locations)throw new Error("無效的檔案格式");await p.saveItinerary(e),y(`行程 "${e.name}" 已成功匯入！`,"success"),T()}catch(e){y(`匯入失敗: ${e.message}`,"error")}},o.readAsText(t),n.target.value=""}),document.getElementById("save-new-itinerary-btn").addEventListener("click",async()=>{const n=document.getElementById("new-itinerary-name").value,t=document.getElementById("new-itinerary-password").value;if(!n){y("請輸入行程名稱","error");return}const o={id:`it_${Date.now()}`,name:n,createdAt:new Date().toISOString(),locations:[],hash:null,salt:null};if(t){const{hash:i,salt:e}=await z.hashPassword(t);o.hash=i,o.salt=e}await p.saveItinerary(o),y("行程已建立！","success"),I(R,!1),T()}),document.getElementById("submit-password-btn").addEventListener("click",async()=>{const n=x.dataset.id,t=document.getElementById("itinerary-password-input").value,o=await p.getItineraryById(n);await z.verifyPassword(t,o.salt,o.hash)?N(o,!1):y("密碼錯誤！","error"),document.getElementById("itinerary-password-input").value=""}),document.getElementById("load-readonly-btn").addEventListener("click",async()=>{const n=x.dataset.id,t=await p.getItineraryById(n);N(t,!0)}),document.getElementById("add-location-btn").addEventListener("click",()=>{r.editingLocationId=null,document.getElementById("edit-location-title").textContent="新增景點";let n=new Date().toISOString().split("T")[0];r.currentItinerary&&r.currentItinerary.locations.length>0&&(n=r.currentItinerary.locations[r.currentItinerary.locations.length-1].date),document.getElementById("location-name").value="",document.getElementById("location-date").value=n,document.getElementById("location-category").value="sight",document.getElementById("location-description").value="",document.getElementById("location-coordinates").value="",document.getElementById("location-search-results").innerHTML="",I(C,!0)}),document.getElementById("save-location-btn").addEventListener("click",Q),document.getElementById("search-location-btn").addEventListener("click",X),document.getElementById("location-search-results").addEventListener("click",n=>{const t=n.target.closest(".search-result-item");t&&(document.getElementById("location-name").value=t.textContent,document.getElementById("location-coordinates").value=`${t.dataset.lat}, ${t.dataset.lon}`,document.getElementById("location-search-results").innerHTML="")}),g.addEventListener("click",n=>{const t=n.target,o=t.closest(".location-item");if(!o)return;const i=o.dataset.id;if(t.closest(".edit-btn")){r.editingLocationId=i;const e=r.currentItinerary.locations.find(s=>s.id===i);document.getElementById("edit-location-title").textContent="編輯景點",document.getElementById("location-name").value=e.location,document.getElementById("location-date").value=e.date,document.getElementById("location-category").value=e.category,document.getElementById("location-description").value=e.description,document.getElementById("location-coordinates").value=e.coordinates.join(", "),I(C,!0)}else if(t.closest(".delete-btn")){const e=o.querySelector("p").textContent;confirm(`確定要刪除景點 "${e}" 嗎？`)&&(r.currentItinerary.locations=r.currentItinerary.locations.filter(s=>s.id!==i),p.saveItinerary(r.currentItinerary),$())}else{const e=r.currentItinerary.locations.find(s=>s.id===i);e&&E.flyTo(e.coordinates,15)}});let a=null;g.addEventListener("dragstart",n=>{if(r.isReadOnly)return;const t=n.target.closest(".location-item");t&&(a=t.dataset.id,setTimeout(()=>t.classList.add("dragging"),0))}),g.addEventListener("dragover",n=>{r.isReadOnly||!a||n.preventDefault()}),g.addEventListener("drop",n=>{if(r.isReadOnly||!a)return;n.preventDefault();const t=n.target.closest(".location-item"),o=r.currentItinerary.locations.findIndex(e=>e.id===a);let i=r.currentItinerary.locations.findIndex(e=>e.id===t?.dataset.id);if(o!==-1&&i!==-1&&o!==i){const[e]=r.currentItinerary.locations.splice(o,1);r.currentItinerary.locations.splice(i,0,e);const s=r.currentItinerary.locations[i].date;e.date=s,p.saveItinerary(r.currentItinerary),$()}a=null,document.querySelector(".dragging")?.classList.remove("dragging")}),g.addEventListener("dragend",()=>{a=null,document.querySelector(".dragging")?.classList.remove("dragging")}),document.getElementById("filters").addEventListener("click",n=>{if(n.target.tagName!=="BUTTON")return;const t=n.target;t.dataset.date!==void 0&&(r.filter.date=t.dataset.date),t.dataset.category!==void 0&&(r.filter.category=t.dataset.category),$()}),M.addEventListener("click",()=>{w.classList.toggle("open"),M.classList.toggle("open"),setTimeout(()=>E.invalidateSize(!0),300)}),V.addEventListener("click",()=>{if(!r.currentItinerary){y("尚未載入任何行程","warning");return}const n=JSON.parse(JSON.stringify(r.currentItinerary));delete n.salt;const t=JSON.stringify(n,null,4),o=new Blob([t],{type:"application/json"}),i=URL.createObjectURL(o),e=document.createElement("a");e.href=i,e.download=`${r.currentItinerary.name}.json`,document.body.appendChild(e),e.click(),document.body.removeChild(e),URL.revokeObjectURL(i),y("行程資料已匯出為 JSON 檔！","success")}),_.addEventListener("click",()=>{if(!r.currentItinerary||r.currentItinerary.locations.length===0){y("沒有可列印的行程資料","warning");return}y("正在準備預覽頁面...","normal");const t=r.currentItinerary.locations.reduce((h,b)=>(h[b.date]||(h[b.date]=[]),h[b.date].push(b),h),{}),o=document.getElementById("stats-days").innerText,i=document.getElementById("stats-locations").innerText,e=document.getElementById("stats-distance").innerText,s=`總天數: ${o} 天 | 總地點: ${i} 個 | 總距離: ${e} km`;let c=`
                <table border="1" style="width: 100%; border-collapse: collapse; font-size: 12px; border-color: #ccc;">
                    <thead>
                        <tr style="background-color: #f2f2f2;">
                            <th style="padding: 8px; width: 40px;">#</th>
                            <th style="padding: 8px;">地點</th>
                            <th style="padding: 8px; width: 80px;">分類</th>
                            <th style="padding: 8px;">描述</th>
                        </tr>
                    </thead>
                    <tbody>`,d=1;const u=Object.keys(t).sort();for(const h of u){const b=new Date(h).toLocaleDateString("zh-TW",{weekday:"long"});c+=`
                    <tr style="background-color: #e9ecef; font-weight: bold;">
                        <td colspan="4" style="padding: 10px; border-left: none; border-right: none;">${h} (${b})</td>
                    </tr>
                `;const O=t[h];for(const P of O)c+=`
                        <tr>
                            <td style="padding: 8px; text-align: center;">${d++}</td>
                            <td style="padding: 8px;">${f(P.location)}</td>
                            <td style="padding: 8px;">${f(v[P.category]?.name||"其他")}</td>
                            <td style="padding: 8px;">${f(P.description)}</td>
                        </tr>
                    `}c+="</tbody></table>";const S=`
                <html>
                <head>
                    <title>${f(r.currentItinerary.name)} - 可列印版</title>
                    <meta charset="UTF-8">
                    <style>
                        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; margin: 20px; }
                        h1 { color: #2c3e50; }
                        p { color: #333; }
                        table { border: 1px solid #ccc; }
                        th, td { border: 1px solid #ccc; }
                        @media print {
                            @page { margin: 20mm; }
                            body { margin: 0; -webkit-print-color-adjust: exact; print-color-adjust: exact; }
                            h1, p { margin-bottom: 15px; }
                            table { page-break-inside: auto; }
                            tr { page-break-inside: avoid; page-break-after: auto; }
                        }
                    </style>
                </head>
                <body>
                    <h1>${f(r.currentItinerary.name)}</h1>
                    <p>${f(s)}</p>
                    ${c}
                </body>
                </html>`,k=window.open();k.document.write(S),k.document.close(),setTimeout(()=>k.print(),500)})}function y(a,n="normal"){const t=document.createElement("div");t.className=`toast-message ${n}`,t.textContent=a,document.body.appendChild(t),setTimeout(()=>t.classList.add("show"),10),setTimeout(()=>{t.classList.remove("show"),t.addEventListener("transitionend",()=>t.remove())},3e3)}function f(a){return a?a.toString().replace(/[&<>"']/g,function(n){return{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"}[n]}):""}function tt(a,n){let t;return function(...o){const i=this;clearTimeout(t),t=setTimeout(()=>a.apply(i,o),n)}}async function et(){await p.init(),Y(),D(),T()}et()});
